services:
  restwebapi:
    image: restwebapi:latest
    build:
      context: restwebapi
      dockerfile: Dockerfile
    ports:
      - "5228:5228"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:5228
      - GRPC_SERVICE_URL=https://grpcapi:5002
      - ASPNETCORE_Kestrel__Certificates__Default__Password=123asd
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - DOTNET_SYSTEM_NET_HTTP_SOCKETSHTTPHANDLER_HTTP2UNENCRYPTEDSUPPORT=true
      - DOTNET_SYSTEM_NET_HTTP_SOCKETSHTTPHANDLER_HTTP3SUPPORT=true
    depends_on:
      - grpcapi
    networks:
      - microservices-network
    volumes:
      - ~/.aspnet/https:/https:ro

  grpcapi:
    image: grpcapi:latest
    build:
      context: grpcapi
      dockerfile: Dockerfile
    ports:
      - "5002:5002"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=https://+:5002
      - ASPNETCORE_Kestrel__Certificates__Default__Password=123asd
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    networks:
      - microservices-network
    volumes:
      - ~/.aspnet/https:/https:ro

  websocketapi:
    image: websocketapi:latest
    build:
      context: websocketapi
      dockerfile: Dockerfile
    ports:
      - "5128:5128"
      - "7043:7043"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:5128;https://+:7043
      - ASPNETCORE_Kestrel__Certificates__Default__Password=123asd
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - DOTNET_SYSTEM_NET_HTTP_SOCKETSHTTPHANDLER_HTTP2UNENCRYPTEDSUPPORT=true
      - DOTNET_SYSTEM_NET_HTTP_SOCKETSHTTPHANDLER_HTTP3SUPPORT=true    
    networks:
      - microservices-network 
    volumes:
      - ~/.aspnet/https:/https:ro
    
  rabbitmqapi:
    image: rabbitmqapi:latest
    build:
      context: rabbitmqapi
      dockerfile: Dockerfile
    ports:
      - "5063:5063"
      - "7127:7127"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:5063;https://+:7127
      - ASPNETCORE_Kestrel__Certificates__Default__Password=123asd
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - DOTNET_SYSTEM_NET_HTTP_SOCKETSHTTPHANDLER_HTTP2UNENCRYPTEDSUPPORT=true
      - DOTNET_SYSTEM_NET_HTTP_SOCKETSHTTPHANDLER_HTTP3SUPPORT=true 
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
    depends_on:
      - rabbitmq
      - kafka
    networks:
      - microservices-network
    volumes:
      - ~/.aspnet/https:/https:ro

  kafkaapi:
    image: kafkaapi:latest
    build:
      context: kafkaapi
      dockerfile: Dockerfile
    ports:
      - "5171:5171"
      - "7021:7021"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:5171;https://+:7021
      - ASPNETCORE_Kestrel__Certificates__Default__Password=123asd
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - DOTNET_SYSTEM_NET_HTTP_SOCKETSHTTPHANDLER_HTTP2UNENCRYPTEDSUPPORT=true
      - DOTNET_SYSTEM_NET_HTTP_SOCKETSHTTPHANDLER_HTTP3SUPPORT=true
    depends_on:
      - kafka
    networks:
      - microservices-network
    volumes:
      - ~/.aspnet/https:/https:ro

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"   # RabbitMQ default port
      - "15672:15672" # RabbitMQ management UI
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - microservices-network  

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      # Configure listeners for both docker and host communication
      - KAFKA_LISTENERS=CONTROLLER://localhost:9091,HOST://0.0.0.0:9092,DOCKER://0.0.0.0:9093
      - KAFKA_ADVERTISED_LISTENERS=HOST://localhost:9092,DOCKER://kafka:9093
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,HOST:PLAINTEXT

      # Settings required for KRaft mode
      - KAFKA_NODE_ID=1
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@localhost:9091

      # Listener to use for broker-to-broker communication
      - KAFKA_INTER_BROKER_LISTENER_NAME=DOCKER

      # Required for a single node cluster
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    networks:
      - microservices-network

  kafkaapi-dapr:
    image: "daprio/daprd:latest"
    command: [
      "./daprd",
      "-app-id", "kafkaapi",
      "-app-port", "5171",
      "-placement-host-address", "placement:50005"
    ]
    depends_on:
      - kafkaapi
      - placement
    network_mode: "service:kafkaapi"

  restwebapi-dapr:
    image: "daprio/daprd:latest"
    command: [
      "./daprd",
      "-app-id", "restwebapi",
      "-app-port", "5228",
      "-placement-host-address", "placement:50005"
    ]
    depends_on:
      - restwebapi
      - placement
    network_mode: "service:restwebapi"

  placement:
    image: "daprio/dapr"
    command: ["./placement", "-port", "50005"]
    ports:
      - "50005:50005"

  db:
    image: postgres
    container_name: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: example@123
    volumes:
      - postgres_data:/var/lib/postgresql
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge

volumes:
  rabbitmq_data:
  postgres_data:
